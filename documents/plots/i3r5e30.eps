%!PS-Adobe-2.0 EPSF-2.0
%%Title: i3r5e30.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Aug 20 02:23:30 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (i3r5e30.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Benjamin R. Hillman)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 20 02:23:30 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1050 420 M
63 0 V
5849 0 R
-63 0 V
stroke
966 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.8e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 840 M
63 0 V
5849 0 R
-63 0 V
stroke
966 840 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.6e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 1260 M
63 0 V
5849 0 R
-63 0 V
stroke
966 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.4e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 1680 M
63 0 V
5849 0 R
-63 0 V
stroke
966 1680 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.2e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 2100 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 2520 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 (-8e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 2940 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 (-6e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 3360 M
63 0 V
5849 0 R
-63 0 V
stroke
966 3360 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 3780 M
63 0 V
5849 0 R
-63 0 V
stroke
966 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 4200 M
63 0 V
5849 0 R
-63 0 V
stroke
966 4200 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1050 4620 M
63 0 V
5849 0 R
-63 0 V
stroke
966 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1050 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MCshow
1.000 UL
LTb
2528 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2528 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MCshow
1.000 UL
LTb
4006 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4006 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
5484 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5484 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1050 4620 N
0 -4200 V
5912 0 V
0 4200 V
-5912 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (N)]
[(Helvetica) 112.0 -42.0 true true 0 (s)]
[(Helvetica) 140.0 0.0 true true 0 (\()]
[(Symbol) 140.0 0.0 true true 0 (q)]
[(Helvetica) 140.0 0.0 true true 0 (\) <s>)]
[(Helvetica) 112.0 70.0 true true 0 (2)]
[(Helvetica) 140.0 0.0 true true 0 ( / )]
[(Symbol) 140.0 0.0 true true 0 (q)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4006 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (s/<s>)]
] -46.7 MCshow
LTb
4006 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (i = 3, R = 5, )]
[(Symbol) 140.0 0.0 true true 0 (D)]
[(Helvetica) 140.0 0.0 true true 0 (E)]
[(Helvetica) 112.0 -42.0 true true 0 (1)]
[(Helvetica) 140.0 0.0 true true 0 ( = 0.30)]
] -32.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
3260 684 M
59 2296 V
60 806 V
60 277 V
59 93 V
60 31 V
60 9 V
60 3 V
59 1 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
stroke
LTb
1050 4620 N
0 -4200 V
5912 0 V
0 4200 V
-5912 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
1.000 UL
LTb
3740 4620 N
0 -1932 V
3222 0 V
0 1932 V
-3222 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
5351 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 ( )]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
3740 2958 Pls
3740 3229 Pls
3740 3480 Pls
3740 3499 Pls
3740 3519 Pls
3740 3538 Pls
3740 3751 Pls
3740 3770 Pls
3740 3789 Pls
3740 4292 Pls
3740 4311 Pls
3740 4330 Pls
3740 4485 Pls
3740 4562 Pls
3740 4581 Pls
3740 4601 Pls
3772 3229 Pls
3772 3499 Pls
3772 3770 Pls
3772 3789 Pls
3772 4292 Pls
3772 4562 Pls
3772 4601 Pls
3804 3210 Pls
3804 3229 Pls
3804 3248 Pls
3804 3480 Pls
3804 3499 Pls
3804 3770 Pls
3804 4601 Pls
3804 4620 Pls
3837 3210 Pls
3837 3229 Pls
3837 3248 Pls
3837 3268 Pls
3837 3499 Pls
3837 4079 Pls
3901 3074 Pls
3901 3094 Pls
3933 3847 Pls
3966 2978 Pls
3966 3789 Pls
3966 3809 Pls
3966 3828 Pls
3966 3847 Pls
3966 3867 Pls
3966 4350 Pls
3966 4369 Pls
3998 2978 Pls
3998 2997 Pls
3998 3828 Pls
3998 4369 Pls
4030 2978 Pls
4030 3828 Pls
4030 3847 Pls
4030 4311 Pls
4030 4330 Pls
4030 4350 Pls
4062 2978 Pls
4062 2997 Pls
4062 3016 Pls
4062 3809 Pls
4062 3828 Pls
4062 3847 Pls
4094 2727 Pls
4094 2765 Pls
4094 3557 Pls
4094 3596 Pls
4094 3809 Pls
4094 3847 Pls
4094 4504 Pls
4127 2688 Pls
4127 2707 Pls
4127 2727 Pls
4127 2746 Pls
4127 2765 Pls
4127 3384 Pls
4127 3519 Pls
4127 3538 Pls
4127 3557 Pls
4127 3577 Pls
4127 3596 Pls
4127 3847 Pls
4127 4079 Pls
4127 4098 Pls
4127 4118 Pls
4127 4485 Pls
4127 4504 Pls
4159 2688 Pls
4159 2746 Pls
4159 3384 Pls
4159 3557 Pls
4159 3963 Pls
4159 3982 Pls
4159 4118 Pls
4159 4137 Pls
4159 4156 Pls
4159 4388 Pls
4159 4504 Pls
4191 2707 Pls
4191 3384 Pls
4191 3944 Pls
4191 3963 Pls
4191 3982 Pls
4191 4118 Pls
4191 4137 Pls
4191 4330 Pls
4191 4369 Pls
4191 4388 Pls
4191 4407 Pls
4191 4427 Pls
4191 4504 Pls
4223 2707 Pls
4223 3287 Pls
4223 3306 Pls
4223 3326 Pls
4223 3345 Pls
4223 3364 Pls
4223 3384 Pls
4223 3577 Pls
4223 3596 Pls
4223 3615 Pls
4223 3635 Pls
4223 3654 Pls
4223 3963 Pls
4223 4388 Pls
4256 2707 Pls
4256 2823 Pls
4256 2843 Pls
4256 3364 Pls
4256 3635 Pls
4256 3654 Pls
4288 2843 Pls
4288 2862 Pls
4288 3268 Pls
4288 3287 Pls
4288 3635 Pls
4320 2920 Pls
4320 3210 Pls
4320 3229 Pls
4320 3248 Pls
4320 3268 Pls
4352 2920 Pls
4352 2939 Pls
4352 2958 Pls
4352 3210 Pls
4352 3248 Pls
4384 3094 Pls
4384 3248 Pls
4384 3268 Pls
4384 3615 Pls
4384 3654 Pls
4384 4601 Pls
4417 3094 Pls
4417 3248 Pls
4417 3268 Pls
4417 3577 Pls
4417 3596 Pls
4417 3615 Pls
4417 3635 Pls
4417 3654 Pls
4417 4581 Pls
4417 4601 Pls
4417 4620 Pls
4449 3074 Pls
4449 3094 Pls
4449 3113 Pls
4449 3577 Pls
4449 3596 Pls
4449 4620 Pls
4481 2804 Pls
4481 3055 Pls
4481 3074 Pls
4481 3094 Pls
4481 3577 Pls
4513 2804 Pls
4513 2823 Pls
4513 2843 Pls
4546 2843 Pls
4546 2862 Pls
4546 3693 Pls
4546 3712 Pls
4546 3731 Pls
4546 4311 Pls
4578 3712 Pls
4578 3731 Pls
4578 4292 Pls
4578 4311 Pls
4610 4002 Pls
4610 4021 Pls
4610 4118 Pls
4642 3132 Pls
4642 3152 Pls
4642 3944 Pls
4642 3963 Pls
4642 3982 Pls
4642 4002 Pls
4642 4021 Pls
4642 4118 Pls
4642 4137 Pls
4642 4156 Pls
4674 2765 Pls
4674 3113 Pls
4674 3132 Pls
4674 3944 Pls
4674 4002 Pls
4674 4118 Pls
4707 2688 Pls
4707 2707 Pls
4707 2727 Pls
4707 2746 Pls
4707 2765 Pls
4707 2785 Pls
4707 2804 Pls
4707 2823 Pls
4707 3113 Pls
4707 4002 Pls
4707 4118 Pls
4739 2688 Pls
4739 2785 Pls
4739 2804 Pls
4739 3113 Pls
4739 3132 Pls
4739 3287 Pls
4739 4118 Pls
4771 2688 Pls
4771 3287 Pls
4771 3306 Pls
4771 3326 Pls
4771 4118 Pls
4803 2881 Pls
4803 2901 Pls
4803 3229 Pls
4803 3248 Pls
4803 3268 Pls
4803 3287 Pls
4803 3306 Pls
4803 4214 Pls
4803 4234 Pls
4835 3287 Pls
4835 4214 Pls
4868 3364 Pls
4868 3384 Pls
4868 3403 Pls
4868 3422 Pls
4868 3693 Pls
4868 4137 Pls
4868 4214 Pls
4868 4234 Pls
4868 4504 Pls
4900 3384 Pls
4900 3673 Pls
4900 3693 Pls
4900 3731 Pls
4900 4118 Pls
4900 4137 Pls
4900 4234 Pls
4900 4465 Pls
4900 4485 Pls
4900 4504 Pls
4900 4523 Pls
4932 3384 Pls
4932 3673 Pls
4932 3693 Pls
4932 3731 Pls
4932 3751 Pls
4932 4098 Pls
4932 4118 Pls
4932 4137 Pls
4932 4156 Pls
4932 4234 Pls
4932 4504 Pls
4932 4523 Pls
4932 4543 Pls
4932 4562 Pls
4964 3693 Pls
4964 3712 Pls
4964 3731 Pls
4964 3751 Pls
4964 4137 Pls
4964 4234 Pls
4997 3693 Pls
4997 3712 Pls
4997 3731 Pls
4997 3751 Pls
4997 4098 Pls
5029 3712 Pls
5029 4079 Pls
5029 4098 Pls
5061 3867 Pls
5061 4098 Pls
5093 3809 Pls
5093 3847 Pls
5093 3867 Pls
5093 3886 Pls
5093 4060 Pls
5093 4079 Pls
5093 4098 Pls
5093 4581 Pls
5125 2688 Pls
5125 3809 Pls
5125 3847 Pls
5125 4543 Pls
5125 4562 Pls
5125 4581 Pls
5125 4601 Pls
5125 4620 Pls
5158 2688 Pls
5158 2997 Pls
5158 3132 Pls
5158 3152 Pls
5158 3171 Pls
5158 3384 Pls
5158 3422 Pls
5158 3441 Pls
5158 3461 Pls
5158 3809 Pls
5158 3847 Pls
5158 4543 Pls
5158 4562 Pls
5190 2997 Pls
5190 3016 Pls
5190 3036 Pls
5190 3152 Pls
5190 3210 Pls
5190 3384 Pls
5190 3403 Pls
5190 3422 Pls
5190 3441 Pls
5190 3731 Pls
5190 3751 Pls
5190 3809 Pls
5190 3828 Pls
5190 3847 Pls
5190 4543 Pls
5222 2997 Pls
5222 3016 Pls
5222 3036 Pls
5222 3113 Pls
5222 3132 Pls
5222 3152 Pls
5222 3171 Pls
5222 3190 Pls
5222 3210 Pls
5222 3441 Pls
5222 3731 Pls
5222 3809 Pls
5222 4330 Pls
5222 4350 Pls
5222 4369 Pls
5222 4388 Pls
5254 2997 Pls
5254 3036 Pls
5254 3055 Pls
5254 3152 Pls
5254 3809 Pls
5254 4330 Pls
5254 4350 Pls
5287 3036 Pls
5287 3152 Pls
5287 4292 Pls
5287 4311 Pls
5287 4330 Pls
5319 3036 Pls
5319 4311 Pls
5351 3499 Pls
5383 3480 Pls
5383 3499 Pls
5383 3673 Pls
5415 3499 Pls
5415 3519 Pls
5415 3635 Pls
5415 3654 Pls
5415 3673 Pls
5415 4040 Pls
5448 3036 Pls
5448 3499 Pls
5448 3615 Pls
5448 3635 Pls
5448 4040 Pls
5480 3036 Pls
5480 3094 Pls
5480 3422 Pls
5480 3441 Pls
5480 3499 Pls
5480 3635 Pls
5480 3963 Pls
5480 4021 Pls
5480 4040 Pls
5512 3036 Pls
5512 3055 Pls
5512 3074 Pls
5512 3094 Pls
5512 3422 Pls
5512 3441 Pls
5512 3635 Pls
5512 3963 Pls
5512 3982 Pls
5512 4002 Pls
5512 4021 Pls
5512 4040 Pls
5512 4060 Pls
5512 4388 Pls
5544 2688 Pls
5544 3074 Pls
5544 3422 Pls
5544 3441 Pls
5544 3461 Pls
5544 3635 Pls
5544 3828 Pls
5544 3982 Pls
5544 4021 Pls
5544 4060 Pls
5544 4388 Pls
5544 4407 Pls
5544 4427 Pls
5544 4446 Pls
5544 4465 Pls
5544 4620 Pls
5577 3461 Pls
5577 3480 Pls
5577 3635 Pls
5577 3809 Pls
5577 3828 Pls
5577 3982 Pls
5577 4060 Pls
5577 4388 Pls
5577 4407 Pls
5609 4388 Pls
5641 3016 Pls
5641 3036 Pls
5641 3055 Pls
5641 4369 Pls
5641 4388 Pls
5673 3055 Pls
5673 3074 Pls
5705 3963 Pls
5738 2823 Pls
5738 3248 Pls
5738 3615 Pls
5738 3635 Pls
5738 3654 Pls
5738 3944 Pls
5738 3963 Pls
5770 3248 Pls
5770 3268 Pls
5770 3615 Pls
5770 3963 Pls
5770 3982 Pls
5770 4002 Pls
5802 3248 Pls
5802 3924 Pls
5802 3944 Pls
5802 3963 Pls
5834 3229 Pls
5834 3248 Pls
5834 3268 Pls
5834 4465 Pls
5867 3229 Pls
5867 3248 Pls
5867 3268 Pls
5867 4214 Pls
5867 4465 Pls
5899 3016 Pls
5899 4195 Pls
5899 4214 Pls
5899 4465 Pls
5931 3016 Pls
5931 4195 Pls
5931 4465 Pls
5963 3016 Pls
5963 4388 Pls
5963 4407 Pls
5963 4446 Pls
5963 4465 Pls
5963 4485 Pls
5963 4504 Pls
5963 4523 Pls
5995 2688 Pls
5995 3016 Pls
5995 3036 Pls
5995 3055 Pls
5995 3287 Pls
5995 3306 Pls
5995 3326 Pls
5995 3345 Pls
5995 3828 Pls
5995 4407 Pls
6028 2688 Pls
6028 2707 Pls
6028 2727 Pls
6028 3016 Pls
6028 3229 Pls
6028 3287 Pls
6028 3306 Pls
6028 3326 Pls
6028 3635 Pls
6028 3673 Pls
6028 3809 Pls
6028 3828 Pls
6028 3847 Pls
6028 3867 Pls
6028 4407 Pls
6060 2688 Pls
6060 2727 Pls
6060 2997 Pls
6060 3016 Pls
6060 3229 Pls
6060 3248 Pls
6060 3268 Pls
6060 3306 Pls
6060 3326 Pls
6060 3345 Pls
6060 3635 Pls
6060 3654 Pls
6060 3673 Pls
6060 3847 Pls
6060 4407 Pls
6092 3016 Pls
6092 3229 Pls
6092 3268 Pls
6092 3326 Pls
6092 3635 Pls
6092 3847 Pls
6124 3016 Pls
6124 3229 Pls
6124 3847 Pls
6157 3229 Pls
6157 3847 Pls
6157 3867 Pls
6157 4214 Pls
6157 4234 Pls
6189 3847 Pls
6189 4234 Pls
6189 4253 Pls
6189 4272 Pls
6221 2823 Pls
6221 3441 Pls
6221 3847 Pls
6221 4195 Pls
6221 4214 Pls
6221 4234 Pls
6253 3441 Pls
6253 4195 Pls
6253 4214 Pls
6285 3403 Pls
6285 3422 Pls
6285 3441 Pls
6285 4195 Pls
6285 4214 Pls
6285 4234 Pls
6318 3384 Pls
6318 3403 Pls
6318 3422 Pls
6382 2688 Pls
6382 2707 Pls
6414 4021 Pls
6446 3982 Pls
6446 4002 Pls
6446 4021 Pls
6446 4620 Pls
6479 4021 Pls
6479 4040 Pls
6479 4060 Pls
6479 4079 Pls
6479 4098 Pls
6479 4118 Pls
6479 4601 Pls
6479 4620 Pls
6511 3132 Pls
6511 3152 Pls
6511 4021 Pls
6511 4098 Pls
6543 3152 Pls
6543 3171 Pls
6543 3190 Pls
6543 3867 Pls
6575 2843 Pls
6575 2862 Pls
6575 3113 Pls
6575 3132 Pls
6575 3152 Pls
6575 3538 Pls
6575 3557 Pls
6575 3828 Pls
6575 3847 Pls
6575 3867 Pls
6608 2823 Pls
6608 2843 Pls
6608 3074 Pls
6608 3094 Pls
6608 3113 Pls
6608 3132 Pls
6608 3248 Pls
6608 3538 Pls
6608 3847 Pls
6608 4427 Pls
6608 4562 Pls
6608 4581 Pls
6608 4601 Pls
6608 4620 Pls
6640 3113 Pls
6640 3132 Pls
6640 3152 Pls
6640 3538 Pls
6640 3557 Pls
6640 4427 Pls
6640 4562 Pls
6640 4601 Pls
6640 4620 Pls
6672 3132 Pls
6672 3152 Pls
6672 3461 Pls
6672 3557 Pls
6672 3577 Pls
6672 3596 Pls
6672 3615 Pls
6672 4388 Pls
6672 4407 Pls
6672 4427 Pls
6672 4446 Pls
6672 4465 Pls
6672 4543 Pls
6672 4562 Pls
6672 4581 Pls
6672 4601 Pls
6672 4620 Pls
6704 2804 Pls
6704 3461 Pls
6704 3596 Pls
6736 2785 Pls
6736 2804 Pls
6736 2823 Pls
6736 3441 Pls
6736 3461 Pls
6769 2823 Pls
6769 3441 Pls
6769 3461 Pls
6769 4002 Pls
6769 4021 Pls
6769 4040 Pls
6801 2804 Pls
6801 2823 Pls
6801 3422 Pls
6801 3441 Pls
6801 4002 Pls
6801 4040 Pls
6801 4427 Pls
6801 4446 Pls
6801 4465 Pls
6801 4485 Pls
6833 3441 Pls
6833 4002 Pls
6833 4446 Pls
6865 2688 Pls
6865 3441 Pls
6865 3731 Pls
6865 4195 Pls
6865 4214 Pls
6865 4330 Pls
6865 4446 Pls
6898 2688 Pls
6898 2997 Pls
6898 3731 Pls
6898 4195 Pls
6898 4311 Pls
6898 4330 Pls
6898 4350 Pls
6930 2688 Pls
6930 2707 Pls
6930 2939 Pls
6930 2997 Pls
6930 3693 Pls
6930 3712 Pls
6930 3731 Pls
6930 3751 Pls
6930 4195 Pls
6930 4214 Pls
6930 4234 Pls
6962 2688 Pls
6962 2901 Pls
6962 2920 Pls
6962 2939 Pls
6962 2958 Pls
6962 2997 Pls
6962 3016 Pls
6962 3615 Pls
6962 3635 Pls
6962 3654 Pls
6962 3673 Pls
6962 3693 Pls
6962 3712 Pls
1.000 UL
LTb
3740 4620 N
0 -1932 V
3222 0 V
0 1932 V
-3222 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
