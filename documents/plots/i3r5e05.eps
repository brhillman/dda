%!PS-Adobe-2.0 EPSF-2.0
%%Title: i3r5e05.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Aug 20 02:23:29 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (i3r5e05.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Benjamin R. Hillman)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 20 02:23:29 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1050 420 M
63 0 V
5849 0 R
-63 0 V
stroke
966 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.8e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 840 M
63 0 V
5849 0 R
-63 0 V
stroke
966 840 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.6e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 1260 M
63 0 V
5849 0 R
-63 0 V
stroke
966 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.4e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 1680 M
63 0 V
5849 0 R
-63 0 V
stroke
966 1680 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.2e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 2100 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1e+07)]
] -46.7 MRshow
1.000 UL
LTb
1050 2520 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 (-8e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 2940 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 (-6e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 3360 M
63 0 V
5849 0 R
-63 0 V
stroke
966 3360 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 3780 M
63 0 V
5849 0 R
-63 0 V
stroke
966 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 4200 M
63 0 V
5849 0 R
-63 0 V
stroke
966 4200 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1050 4620 M
63 0 V
5849 0 R
-63 0 V
stroke
966 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2e+06)]
] -46.7 MRshow
1.000 UL
LTb
1050 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1050 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MCshow
1.000 UL
LTb
2528 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2528 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MCshow
1.000 UL
LTb
4006 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4006 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
5484 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5484 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1050 4620 N
0 -4200 V
5912 0 V
0 4200 V
-5912 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (N)]
[(Helvetica) 112.0 -42.0 true true 0 (s)]
[(Helvetica) 140.0 0.0 true true 0 (\()]
[(Symbol) 140.0 0.0 true true 0 (q)]
[(Helvetica) 140.0 0.0 true true 0 (\) <s>)]
[(Helvetica) 112.0 70.0 true true 0 (2)]
[(Helvetica) 140.0 0.0 true true 0 ( / )]
[(Symbol) 140.0 0.0 true true 0 (q)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4006 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (s/<s>)]
] -46.7 MCshow
LTb
4006 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (i = 3, R = 5, )]
[(Symbol) 140.0 0.0 true true 0 (D)]
[(Helvetica) 140.0 0.0 true true 0 (E)]
[(Helvetica) 112.0 -42.0 true true 0 (1)]
[(Helvetica) 140.0 0.0 true true 0 ( = 0.05)]
] -32.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
3260 684 M
59 2296 V
60 806 V
60 277 V
59 93 V
60 31 V
60 9 V
60 3 V
59 1 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
stroke
LTb
1050 4620 N
0 -4200 V
5912 0 V
0 4200 V
-5912 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
1.000 UL
LTb
3740 4620 N
0 -1932 V
3222 0 V
0 1932 V
-3222 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
5351 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 ( )]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
3740 3210 Pls
3740 3229 Pls
3740 3248 Pls
3740 3268 Pls
3740 3287 Pls
3772 3190 Pls
3772 3210 Pls
3772 3229 Pls
3772 3248 Pls
3772 3268 Pls
3772 3287 Pls
3772 4137 Pls
3804 2958 Pls
3804 3190 Pls
3804 3210 Pls
3804 3229 Pls
3804 3248 Pls
3804 3268 Pls
3804 3287 Pls
3837 3190 Pls
3837 3210 Pls
3837 3229 Pls
3837 3248 Pls
3837 3268 Pls
3869 3190 Pls
3869 3210 Pls
3869 3229 Pls
3869 3248 Pls
3869 3268 Pls
3869 4581 Pls
3901 4427 Pls
3966 4292 Pls
4062 2920 Pls
4062 2939 Pls
4094 2920 Pls
4094 2939 Pls
4094 2958 Pls
4127 2920 Pls
4127 2939 Pls
4127 2958 Pls
4127 3113 Pls
4127 3867 Pls
4159 2920 Pls
4159 2939 Pls
4159 2958 Pls
4159 3113 Pls
4159 4040 Pls
4159 4060 Pls
4159 4079 Pls
4159 4098 Pls
4159 4118 Pls
4191 4040 Pls
4191 4060 Pls
4191 4079 Pls
4191 4098 Pls
4191 4118 Pls
4191 4137 Pls
4223 4040 Pls
4223 4060 Pls
4223 4079 Pls
4223 4098 Pls
4223 4118 Pls
4223 4137 Pls
4256 4040 Pls
4256 4060 Pls
4256 4079 Pls
4256 4098 Pls
4256 4118 Pls
4256 4137 Pls
4256 4156 Pls
4288 3422 Pls
4320 3557 Pls
4320 3809 Pls
4320 3828 Pls
4320 3847 Pls
4352 2958 Pls
4352 2978 Pls
4352 2997 Pls
4352 3809 Pls
4352 3828 Pls
4352 3847 Pls
4384 2958 Pls
4384 2978 Pls
4384 2997 Pls
4384 3016 Pls
4384 3809 Pls
4384 3828 Pls
4384 3847 Pls
4384 3867 Pls
4417 2958 Pls
4417 2978 Pls
4417 2997 Pls
4417 3016 Pls
4417 3789 Pls
4417 3809 Pls
4417 3828 Pls
4417 3847 Pls
4417 3867 Pls
4449 2958 Pls
4449 2978 Pls
4449 2997 Pls
4449 3016 Pls
4449 3055 Pls
4449 3809 Pls
4449 3828 Pls
4449 3847 Pls
4449 3867 Pls
4481 3809 Pls
4481 3828 Pls
4481 3847 Pls
4481 3867 Pls
4481 4040 Pls
4513 2823 Pls
4513 4118 Pls
4513 4176 Pls
4578 3673 Pls
4578 3693 Pls
4578 3712 Pls
4610 3673 Pls
4610 3693 Pls
4610 3712 Pls
4642 3287 Pls
4642 3306 Pls
4642 3326 Pls
4642 3345 Pls
4642 3364 Pls
4642 3693 Pls
4642 3712 Pls
4674 2901 Pls
4674 3287 Pls
4674 3306 Pls
4674 3326 Pls
4674 3345 Pls
4674 3364 Pls
4707 3287 Pls
4707 3306 Pls
4707 3326 Pls
4707 3345 Pls
4707 3364 Pls
4707 3789 Pls
4707 3809 Pls
4707 3828 Pls
4707 3847 Pls
4707 4079 Pls
4739 3210 Pls
4739 3287 Pls
4739 3306 Pls
4739 3326 Pls
4739 3345 Pls
4739 3364 Pls
4739 3384 Pls
4739 3789 Pls
4739 3809 Pls
4739 3828 Pls
4739 3847 Pls
4771 3287 Pls
4771 3306 Pls
4771 3326 Pls
4771 3345 Pls
4771 3364 Pls
4771 3384 Pls
4771 3789 Pls
4771 3809 Pls
4771 3828 Pls
4771 3847 Pls
4771 3867 Pls
4771 4195 Pls
4771 4214 Pls
4803 3287 Pls
4803 3306 Pls
4803 3326 Pls
4803 3345 Pls
4803 3364 Pls
4803 3384 Pls
4803 3789 Pls
4803 3809 Pls
4803 3828 Pls
4803 3847 Pls
4803 3867 Pls
4803 4195 Pls
4803 4214 Pls
4835 3306 Pls
4835 3326 Pls
4835 3789 Pls
4835 3809 Pls
4835 3828 Pls
4835 3847 Pls
4835 3867 Pls
4835 4195 Pls
4835 4214 Pls
4835 4562 Pls
4868 3789 Pls
4868 3809 Pls
4868 3828 Pls
4868 3847 Pls
4868 4176 Pls
4868 4195 Pls
4868 4214 Pls
4868 4234 Pls
4900 4176 Pls
4900 4195 Pls
4900 4214 Pls
4900 4234 Pls
4932 4195 Pls
4932 4214 Pls
4932 4234 Pls
4964 2920 Pls
4964 4195 Pls
4964 4214 Pls
4964 4234 Pls
4997 3731 Pls
4997 4214 Pls
4997 4234 Pls
4997 4523 Pls
5029 2939 Pls
5061 2939 Pls
5061 2958 Pls
5061 2978 Pls
5061 2997 Pls
5061 3016 Pls
5061 4523 Pls
5093 2939 Pls
5093 2958 Pls
5093 2978 Pls
5093 2997 Pls
5093 3016 Pls
5125 2920 Pls
5125 2939 Pls
5125 2958 Pls
5125 2978 Pls
5125 2997 Pls
5125 3016 Pls
5158 2823 Pls
5158 2920 Pls
5158 2939 Pls
5158 2958 Pls
5158 2978 Pls
5158 2997 Pls
5158 3016 Pls
5158 3036 Pls
5158 3306 Pls
5158 3326 Pls
5158 3345 Pls
5190 2920 Pls
5190 2939 Pls
5190 2958 Pls
5190 2978 Pls
5190 2997 Pls
5190 3016 Pls
5190 3036 Pls
5190 3306 Pls
5190 3326 Pls
5190 3345 Pls
5190 3364 Pls
5190 3635 Pls
5190 3654 Pls
5222 2939 Pls
5222 2958 Pls
5222 2978 Pls
5222 2997 Pls
5222 3016 Pls
5222 3306 Pls
5222 3326 Pls
5222 3345 Pls
5222 3364 Pls
5222 3635 Pls
5222 3654 Pls
5254 3635 Pls
5254 3654 Pls
5287 2901 Pls
5287 3384 Pls
5287 3403 Pls
5287 3422 Pls
5287 3441 Pls
5287 3461 Pls
5287 4176 Pls
5287 4195 Pls
5287 4214 Pls
5319 3384 Pls
5319 3403 Pls
5319 3422 Pls
5319 3441 Pls
5319 3461 Pls
5319 3480 Pls
5319 4137 Pls
5319 4156 Pls
5319 4176 Pls
5319 4195 Pls
5319 4214 Pls
5351 2823 Pls
5351 2843 Pls
5351 3384 Pls
5351 3403 Pls
5351 3422 Pls
5351 3441 Pls
5351 3461 Pls
5351 3480 Pls
5351 4137 Pls
5351 4156 Pls
5351 4176 Pls
5351 4195 Pls
5351 4214 Pls
5383 2823 Pls
5383 2843 Pls
5383 3384 Pls
5383 3403 Pls
5383 3422 Pls
5383 3441 Pls
5383 3461 Pls
5383 3480 Pls
5383 4137 Pls
5383 4156 Pls
5383 4176 Pls
5383 4195 Pls
5383 4214 Pls
5415 2823 Pls
5415 2843 Pls
5415 2862 Pls
5415 2958 Pls
5415 3461 Pls
5415 3480 Pls
5415 3886 Pls
5415 3905 Pls
5415 4156 Pls
5415 4176 Pls
5448 2823 Pls
5448 2843 Pls
5448 3210 Pls
5448 3867 Pls
5448 3886 Pls
5448 3905 Pls
5448 3924 Pls
5448 4156 Pls
5448 4176 Pls
5480 2823 Pls
5480 3847 Pls
5480 3867 Pls
5480 3886 Pls
5480 3905 Pls
5480 3924 Pls
5480 4543 Pls
5512 3847 Pls
5512 3867 Pls
5512 3886 Pls
5512 3905 Pls
5512 3924 Pls
5544 3847 Pls
5544 3867 Pls
5544 3886 Pls
5544 3905 Pls
5577 3828 Pls
5577 3847 Pls
5577 3867 Pls
5577 3886 Pls
5577 3905 Pls
5577 4234 Pls
5641 3635 Pls
5641 4388 Pls
5641 4407 Pls
5673 2688 Pls
5673 2707 Pls
5673 2727 Pls
5673 2746 Pls
5673 2765 Pls
5673 3345 Pls
5673 3789 Pls
5673 4388 Pls
5673 4407 Pls
5673 4427 Pls
5673 4446 Pls
5705 2688 Pls
5705 2707 Pls
5705 2727 Pls
5705 2746 Pls
5705 2765 Pls
5705 4388 Pls
5705 4407 Pls
5705 4427 Pls
5705 4446 Pls
5738 2688 Pls
5738 2707 Pls
5738 2727 Pls
5738 2746 Pls
5738 2765 Pls
5738 4118 Pls
5738 4137 Pls
5738 4156 Pls
5738 4369 Pls
5738 4388 Pls
5738 4407 Pls
5738 4427 Pls
5738 4446 Pls
5770 2688 Pls
5770 2707 Pls
5770 2727 Pls
5770 2746 Pls
5770 3905 Pls
5770 4098 Pls
5770 4118 Pls
5770 4137 Pls
5770 4156 Pls
5770 4369 Pls
5770 4388 Pls
5770 4407 Pls
5770 4427 Pls
5770 4446 Pls
5802 2688 Pls
5802 2707 Pls
5802 4137 Pls
5802 4156 Pls
5802 4388 Pls
5802 4407 Pls
5802 4427 Pls
5802 4446 Pls
5867 3055 Pls
5899 3384 Pls
5899 4446 Pls
5931 3712 Pls
5963 3828 Pls
5963 4234 Pls
5995 3577 Pls
6028 3867 Pls
6028 3886 Pls
6028 4311 Pls
6028 4330 Pls
6028 4350 Pls
6060 3770 Pls
6060 3847 Pls
6060 3867 Pls
6060 3886 Pls
6060 4311 Pls
6060 4330 Pls
6060 4350 Pls
6092 2997 Pls
6092 3751 Pls
6092 3770 Pls
6092 3789 Pls
6092 3809 Pls
6092 3828 Pls
6092 3847 Pls
6092 3867 Pls
6092 3886 Pls
6092 4311 Pls
6092 4330 Pls
6092 4350 Pls
6124 3751 Pls
6124 3770 Pls
6124 3789 Pls
6124 3809 Pls
6124 3828 Pls
6124 4601 Pls
6157 2688 Pls
6157 2707 Pls
6157 2727 Pls
6157 3751 Pls
6157 3770 Pls
6157 3789 Pls
6157 3809 Pls
6157 3828 Pls
6189 2688 Pls
6189 2707 Pls
6189 2727 Pls
6189 3152 Pls
6189 3751 Pls
6189 3770 Pls
6189 3789 Pls
6189 3809 Pls
6189 3828 Pls
6189 4446 Pls
6221 2688 Pls
6221 2707 Pls
6221 2727 Pls
6221 3751 Pls
6221 3770 Pls
6221 3789 Pls
6221 3809 Pls
6221 3828 Pls
6253 2688 Pls
6253 2707 Pls
6253 2727 Pls
6318 2843 Pls
6318 3577 Pls
6318 4407 Pls
6318 4504 Pls
6318 4523 Pls
6350 3016 Pls
6350 3132 Pls
6350 3152 Pls
6350 3171 Pls
6350 3190 Pls
6350 3789 Pls
6350 3809 Pls
6350 3828 Pls
6350 3847 Pls
6350 3867 Pls
6350 4504 Pls
6350 4523 Pls
6382 3132 Pls
6382 3152 Pls
6382 3171 Pls
6382 3190 Pls
6382 3210 Pls
6382 3326 Pls
6382 3345 Pls
6382 3364 Pls
6382 3789 Pls
6382 3809 Pls
6382 3828 Pls
6382 3847 Pls
6382 3867 Pls
6414 3132 Pls
6414 3152 Pls
6414 3171 Pls
6414 3190 Pls
6414 3326 Pls
6414 3345 Pls
6414 3364 Pls
6414 3731 Pls
6414 3789 Pls
6414 3809 Pls
6414 3828 Pls
6414 3847 Pls
6414 3867 Pls
6414 3886 Pls
6414 4195 Pls
6414 4214 Pls
6414 4234 Pls
6414 4253 Pls
6414 4272 Pls
6414 4292 Pls
6414 4311 Pls
6446 3132 Pls
6446 3152 Pls
6446 3171 Pls
6446 3326 Pls
6446 3345 Pls
6446 3364 Pls
6446 3789 Pls
6446 3809 Pls
6446 3828 Pls
6446 3847 Pls
6446 3867 Pls
6446 3886 Pls
6446 4176 Pls
6446 4195 Pls
6446 4214 Pls
6446 4234 Pls
6446 4253 Pls
6446 4272 Pls
6446 4292 Pls
6446 4311 Pls
6479 3809 Pls
6479 3828 Pls
6479 3847 Pls
6479 3867 Pls
6479 3886 Pls
6479 4176 Pls
6479 4195 Pls
6479 4214 Pls
6479 4234 Pls
6479 4253 Pls
6479 4272 Pls
6479 4292 Pls
6479 4311 Pls
6479 4427 Pls
6511 2707 Pls
6511 3499 Pls
6511 3809 Pls
6511 3828 Pls
6511 3847 Pls
6511 3867 Pls
6511 3886 Pls
6511 4176 Pls
6511 4195 Pls
6511 4214 Pls
6511 4234 Pls
6511 4253 Pls
6511 4272 Pls
6511 4292 Pls
6543 3210 Pls
6543 3229 Pls
6543 3809 Pls
6543 3828 Pls
6543 3847 Pls
6543 3867 Pls
6543 4195 Pls
6543 4214 Pls
6543 4234 Pls
6543 4253 Pls
6543 4272 Pls
6543 4292 Pls
6575 3171 Pls
6575 3190 Pls
6575 3210 Pls
6575 3229 Pls
6575 4195 Pls
6575 4214 Pls
6575 4234 Pls
6575 4253 Pls
6575 4272 Pls
6575 4292 Pls
6608 3171 Pls
6608 3190 Pls
6608 3210 Pls
6608 3229 Pls
6608 4601 Pls
6640 3113 Pls
6704 3074 Pls
6736 3074 Pls
6736 3577 Pls
6736 3596 Pls
6736 3615 Pls
6769 3577 Pls
6769 3596 Pls
6769 3615 Pls
6833 3673 Pls
6833 3924 Pls
6865 4292 Pls
6865 4311 Pls
6898 2958 Pls
6898 2978 Pls
6898 2997 Pls
6898 3016 Pls
6898 4292 Pls
6898 4311 Pls
6930 2958 Pls
6930 2978 Pls
6930 2997 Pls
6930 3016 Pls
6930 3036 Pls
6930 4292 Pls
6930 4311 Pls
6962 2958 Pls
6962 2978 Pls
6962 2997 Pls
6962 3016 Pls
6962 3036 Pls
6962 3886 Pls
1.000 UL
LTb
3740 4620 N
0 -1932 V
3222 0 V
0 1932 V
-3222 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
