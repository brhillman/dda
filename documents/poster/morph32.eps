%!PS-Adobe-2.0 EPSF-2.0
%%Title: morph32.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu May 22 17:34:11 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (morph32.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Benjamin R. Hillman)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 22 17:34:11 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
238 4872 N
238 168 L
6724 0 V
0 4704 V
-6724 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (R = 10)]
[(Helvetica) 112.0 70.0 true true 0 (6)]
[(Helvetica) 140.0 0.0 true true 0 (, )]
[(Symbol) 140.0 0.0 true true 0 (q)]
[(Helvetica) 140.0 0.0 true true 0 ( = 0.05)]
] -60.7 MRshow
LT0
238 685 Pls
372 4072 Pls
440 4072 Pls
507 450 Pls
507 4025 Pls
507 4072 Pls
507 4402 Pls
507 4449 Pls
507 4496 Pls
574 450 Pls
574 3837 Pls
574 4072 Pls
574 4119 Pls
574 4449 Pls
641 450 Pls
641 3790 Pls
641 3837 Pls
641 4072 Pls
641 4402 Pls
641 4449 Pls
641 4496 Pls
709 450 Pls
709 3837 Pls
709 4072 Pls
709 4119 Pls
709 4449 Pls
776 3320 Pls
776 3743 Pls
776 3790 Pls
776 3837 Pls
776 4402 Pls
776 4449 Pls
843 874 Pls
843 2097 Pls
843 3837 Pls
910 827 Pls
910 874 Pls
910 2097 Pls
978 874 Pls
978 2097 Pls
1045 827 Pls
1045 874 Pls
1045 2097 Pls
1112 2050 Pls
1112 2097 Pls
1112 2144 Pls
1179 1956 Pls
1179 2003 Pls
1179 2050 Pls
1179 2097 Pls
1247 2661 Pls
1247 2708 Pls
1247 2755 Pls
1247 4872 Pls
1314 2614 Pls
1314 2661 Pls
1314 2708 Pls
1381 2097 Pls
1381 2661 Pls
1381 2708 Pls
1381 3226 Pls
1448 1908 Pls
1448 1956 Pls
1448 2003 Pls
1448 2050 Pls
1448 2097 Pls
1448 2661 Pls
1448 3226 Pls
1516 1956 Pls
1516 2050 Pls
1516 2661 Pls
1516 2708 Pls
1516 3179 Pls
1516 3226 Pls
1516 3273 Pls
1516 3320 Pls
1583 2661 Pls
1583 2708 Pls
1583 3226 Pls
1650 3084 Pls
1650 3132 Pls
1650 3179 Pls
1650 3226 Pls
1650 3273 Pls
1717 3084 Pls
1785 968 Pls
1785 1814 Pls
1785 1861 Pls
1785 1908 Pls
1852 968 Pls
1852 1861 Pls
1852 1908 Pls
1852 2003 Pls
1852 2050 Pls
1852 2097 Pls
1919 732 Pls
1919 780 Pls
1919 968 Pls
1919 1861 Pls
1919 1908 Pls
1919 1956 Pls
1919 2003 Pls
1919 2050 Pls
1986 780 Pls
1986 968 Pls
1986 1908 Pls
1986 1956 Pls
1986 3367 Pls
2053 780 Pls
2053 827 Pls
2053 874 Pls
2053 921 Pls
2053 968 Pls
2053 1015 Pls
2053 1861 Pls
2053 1908 Pls
2053 1956 Pls
2053 3273 Pls
2053 3320 Pls
2053 3367 Pls
2121 591 Pls
2121 638 Pls
2121 732 Pls
2121 780 Pls
2121 3226 Pls
2121 3273 Pls
2188 638 Pls
2188 685 Pls
2188 732 Pls
2188 3084 Pls
2188 3132 Pls
2188 3226 Pls
2255 732 Pls
2255 3084 Pls
2255 3132 Pls
2255 3179 Pls
2255 3226 Pls
2255 3273 Pls
2322 638 Pls
2322 685 Pls
2322 732 Pls
2322 3179 Pls
2322 3273 Pls
2322 3320 Pls
2390 544 Pls
2390 591 Pls
2390 638 Pls
2390 732 Pls
2390 3179 Pls
2457 638 Pls
2457 732 Pls
2457 3132 Pls
2457 3179 Pls
2457 3226 Pls
2524 638 Pls
2591 638 Pls
2591 1015 Pls
2591 1062 Pls
2591 1109 Pls
2591 1156 Pls
2591 1203 Pls
2659 1156 Pls
2659 1203 Pls
2659 1250 Pls
2726 1156 Pls
2726 1203 Pls
2793 1109 Pls
2793 1156 Pls
2860 4496 Pls
2860 4637 Pls
2860 4684 Pls
2928 2426 Pls
2928 4496 Pls
2928 4543 Pls
2928 4637 Pls
2995 2426 Pls
2995 3555 Pls
2995 4543 Pls
2995 4590 Pls
2995 4637 Pls
2995 4684 Pls
3062 2426 Pls
3062 3508 Pls
3062 3555 Pls
3062 4590 Pls
3062 4684 Pls
3062 4731 Pls
3129 2426 Pls
3129 2473 Pls
3129 3555 Pls
3129 4025 Pls
3129 4590 Pls
3129 4731 Pls
3129 4778 Pls
3197 2379 Pls
3197 2426 Pls
3197 2473 Pls
3197 3508 Pls
3197 3555 Pls
3197 3602 Pls
3197 3649 Pls
3197 4025 Pls
3197 4637 Pls
3197 4684 Pls
3197 4731 Pls
3264 215 Pls
3264 2473 Pls
3264 2520 Pls
3264 2567 Pls
3264 2614 Pls
3264 3555 Pls
3264 4025 Pls
3264 4072 Pls
3264 4684 Pls
3331 215 Pls
3331 2473 Pls
3331 3555 Pls
3331 4025 Pls
3331 4072 Pls
3331 4119 Pls
3398 215 Pls
3398 3367 Pls
3398 3461 Pls
3398 3555 Pls
3398 3602 Pls
3398 4072 Pls
3466 168 Pls
3466 215 Pls
3466 262 Pls
3466 309 Pls
3466 356 Pls
3466 3320 Pls
3466 3367 Pls
3466 3414 Pls
3466 3461 Pls
3466 3508 Pls
3466 3555 Pls
3466 4072 Pls
3533 215 Pls
3533 309 Pls
3533 3367 Pls
3533 3555 Pls
3533 4072 Pls
3734 1391 Pls
3734 2097 Pls
3802 1391 Pls
3802 2097 Pls
3802 2144 Pls
3802 2191 Pls
3869 1344 Pls
3869 1391 Pls
3869 1438 Pls
3869 1485 Pls
3869 1908 Pls
3869 1956 Pls
3869 2097 Pls
3869 2144 Pls
3869 2191 Pls
3869 2379 Pls
3936 1344 Pls
3936 1391 Pls
3936 1438 Pls
3936 1485 Pls
3936 1956 Pls
3936 2003 Pls
3936 2050 Pls
3936 2097 Pls
3936 2144 Pls
3936 2379 Pls
3936 4778 Pls
4003 403 Pls
4003 450 Pls
4003 1344 Pls
4003 1438 Pls
4003 1956 Pls
4003 2050 Pls
4003 2144 Pls
4003 2191 Pls
4003 2238 Pls
4003 2285 Pls
4003 2332 Pls
4003 2379 Pls
4003 2426 Pls
4003 4778 Pls
4071 450 Pls
4071 497 Pls
4071 1438 Pls
4071 1485 Pls
4071 2050 Pls
4071 2097 Pls
4071 2191 Pls
4071 2238 Pls
4071 3649 Pls
4071 3696 Pls
4071 4637 Pls
4071 4778 Pls
4138 450 Pls
4138 874 Pls
4138 921 Pls
4138 1015 Pls
4138 1344 Pls
4138 1391 Pls
4138 1438 Pls
4138 2050 Pls
4138 3649 Pls
4138 4637 Pls
4138 4684 Pls
4138 4731 Pls
4138 4778 Pls
4138 4825 Pls
4138 4872 Pls
4205 827 Pls
4205 874 Pls
4205 921 Pls
4205 968 Pls
4205 1015 Pls
4205 1391 Pls
4205 1438 Pls
4205 3649 Pls
4205 4637 Pls
4205 4778 Pls
4205 4872 Pls
4272 827 Pls
4272 1015 Pls
4272 3555 Pls
4272 3602 Pls
4272 3649 Pls
4272 3696 Pls
4272 3743 Pls
4272 4684 Pls
4272 4731 Pls
4272 4778 Pls
4272 4825 Pls
4272 4872 Pls
4340 827 Pls
4340 3555 Pls
4340 3649 Pls
4340 3743 Pls
4340 4684 Pls
4340 4778 Pls
4340 4825 Pls
4340 4872 Pls
4407 827 Pls
4407 874 Pls
4407 3555 Pls
4407 4637 Pls
4407 4684 Pls
4407 4731 Pls
4407 4825 Pls
4407 4872 Pls
4474 827 Pls
4474 4872 Pls
4541 827 Pls
4541 4872 Pls
4609 2567 Pls
4609 4872 Pls
4676 2567 Pls
4743 2567 Pls
4810 2567 Pls
4810 2614 Pls
4810 2661 Pls
4878 2567 Pls
4878 2614 Pls
4945 2567 Pls
4945 2614 Pls
4945 2661 Pls
4945 2708 Pls
5012 2661 Pls
5079 2661 Pls
5147 3696 Pls
5214 3696 Pls
5281 3602 Pls
5281 3649 Pls
5281 3696 Pls
5348 3649 Pls
5348 3696 Pls
5348 3978 Pls
5348 4025 Pls
5415 168 Pls
5415 3649 Pls
5415 4025 Pls
5415 4072 Pls
5483 168 Pls
5483 215 Pls
5483 3649 Pls
5483 3978 Pls
5483 4025 Pls
5550 215 Pls
5550 262 Pls
5550 309 Pls
5550 356 Pls
5550 403 Pls
5550 3649 Pls
5550 3978 Pls
5550 4025 Pls
5617 4025 Pls
5684 3978 Pls
5684 4025 Pls
5684 4072 Pls
5684 4731 Pls
5684 4778 Pls
5752 921 Pls
5752 968 Pls
5752 3978 Pls
5752 4778 Pls
5819 968 Pls
5819 1109 Pls
5819 2896 Pls
5819 2943 Pls
5819 4778 Pls
5886 921 Pls
5886 968 Pls
5886 1015 Pls
5886 1062 Pls
5886 1109 Pls
5886 2896 Pls
5886 3037 Pls
5886 3084 Pls
5886 3132 Pls
5886 4778 Pls
5953 968 Pls
5953 2896 Pls
5953 2943 Pls
5953 2990 Pls
5953 3037 Pls
5953 4731 Pls
5953 4778 Pls
5953 4825 Pls
5953 4872 Pls
6021 874 Pls
6021 921 Pls
6021 968 Pls
6021 2943 Pls
6021 3037 Pls
6021 3084 Pls
6021 3132 Pls
6021 3179 Pls
6021 4731 Pls
6088 968 Pls
6088 2050 Pls
6088 2943 Pls
6088 3179 Pls
6088 4731 Pls
6155 2003 Pls
6155 2050 Pls
6222 2050 Pls
6290 403 Pls
6290 544 Pls
6290 2050 Pls
6357 403 Pls
6357 544 Pls
6357 1956 Pls
6357 2003 Pls
6357 2050 Pls
6357 2097 Pls
6424 403 Pls
6424 450 Pls
6424 497 Pls
6424 544 Pls
6424 591 Pls
6424 638 Pls
6424 685 Pls
6424 2050 Pls
6491 403 Pls
6491 2050 Pls
6491 2238 Pls
6559 1861 Pls
6559 1908 Pls
6559 1956 Pls
6559 2003 Pls
6559 2050 Pls
6559 2097 Pls
6559 2144 Pls
6559 2191 Pls
6559 2238 Pls
6559 2285 Pls
6559 2332 Pls
6559 2943 Pls
6559 4355 Pls
6559 4402 Pls
6626 2050 Pls
6626 2191 Pls
6626 2943 Pls
6626 4355 Pls
6693 215 Pls
6693 2050 Pls
6693 2943 Pls
6693 4355 Pls
6693 4449 Pls
6760 168 Pls
6760 215 Pls
6760 2050 Pls
6760 2896 Pls
6760 2943 Pls
6760 4308 Pls
6760 4355 Pls
6760 4402 Pls
6760 4449 Pls
6760 4496 Pls
6760 4543 Pls
6828 215 Pls
6828 2943 Pls
6828 4449 Pls
6895 168 Pls
6895 215 Pls
6895 262 Pls
6895 1344 Pls
6895 1391 Pls
6895 2943 Pls
6895 4449 Pls
6962 215 Pls
6962 1344 Pls
6962 1391 Pls
6962 2896 Pls
6962 2943 Pls
6962 3931 Pls
6962 3978 Pls
6962 4449 Pls
6962 4496 Pls
6594 4739 Pls
1.000 UL
LTb
238 4872 N
238 168 L
6724 0 V
0 4704 V
-6724 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
